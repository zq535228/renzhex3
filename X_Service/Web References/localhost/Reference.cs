//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
// 
#pragma warning disable 1591

namespace X_Service.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceShopSoap", Namespace="http://serv.renzhe.org/")]
    public partial class ServiceShop : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllPutModulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPickModulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadClassStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClassStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback doitOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceShop() {
            this.Url = global::X_Service.Properties.Settings.Default.X_Service_localhost_ServiceShop;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllPutModulesCompletedEventHandler GetAllPutModulesCompleted;
        
        /// <remarks/>
        public event GetAllPickModulesCompletedEventHandler GetAllPickModulesCompleted;
        
        /// <remarks/>
        public event UploadClassStrCompletedEventHandler UploadClassStrCompleted;
        
        /// <remarks/>
        public event GetClassStrCompletedEventHandler GetClassStrCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event ReNameCompletedEventHandler ReNameCompleted;
        
        /// <remarks/>
        public event doitCompletedEventHandler doitCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://serv.renzhe.org/GetAllPutModules", RequestNamespace="http://serv.renzhe.org/", ResponseNamespace="http://serv.renzhe.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ModelShopOne[] GetAllPutModules() {
            object[] results = this.Invoke("GetAllPutModules", new object[0]);
            return ((ModelShopOne[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPutModulesAsync() {
            this.GetAllPutModulesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllPutModulesAsync(object userState) {
            if ((this.GetAllPutModulesOperationCompleted == null)) {
                this.GetAllPutModulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPutModulesOperationCompleted);
            }
            this.InvokeAsync("GetAllPutModules", new object[0], this.GetAllPutModulesOperationCompleted, userState);
        }
        
        private void OnGetAllPutModulesOperationCompleted(object arg) {
            if ((this.GetAllPutModulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPutModulesCompleted(this, new GetAllPutModulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://serv.renzhe.org/GetAllPickModules", RequestNamespace="http://serv.renzhe.org/", ResponseNamespace="http://serv.renzhe.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ModelShopOne[] GetAllPickModules() {
            object[] results = this.Invoke("GetAllPickModules", new object[0]);
            return ((ModelShopOne[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPickModulesAsync() {
            this.GetAllPickModulesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllPickModulesAsync(object userState) {
            if ((this.GetAllPickModulesOperationCompleted == null)) {
                this.GetAllPickModulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPickModulesOperationCompleted);
            }
            this.InvokeAsync("GetAllPickModules", new object[0], this.GetAllPickModulesOperationCompleted, userState);
        }
        
        private void OnGetAllPickModulesOperationCompleted(object arg) {
            if ((this.GetAllPickModulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPickModulesCompleted(this, new GetAllPickModulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://serv.renzhe.org/UploadClassStr", RequestNamespace="http://serv.renzhe.org/", ResponseNamespace="http://serv.renzhe.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadClassStr(string fileName, string fileClassStr, mType mtype) {
            object[] results = this.Invoke("UploadClassStr", new object[] {
                        fileName,
                        fileClassStr,
                        mtype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadClassStrAsync(string fileName, string fileClassStr, mType mtype) {
            this.UploadClassStrAsync(fileName, fileClassStr, mtype, null);
        }
        
        /// <remarks/>
        public void UploadClassStrAsync(string fileName, string fileClassStr, mType mtype, object userState) {
            if ((this.UploadClassStrOperationCompleted == null)) {
                this.UploadClassStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadClassStrOperationCompleted);
            }
            this.InvokeAsync("UploadClassStr", new object[] {
                        fileName,
                        fileClassStr,
                        mtype}, this.UploadClassStrOperationCompleted, userState);
        }
        
        private void OnUploadClassStrOperationCompleted(object arg) {
            if ((this.UploadClassStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadClassStrCompleted(this, new UploadClassStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://serv.renzhe.org/GetClassStr", RequestNamespace="http://serv.renzhe.org/", ResponseNamespace="http://serv.renzhe.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClassStr(string fileName, mType mtype) {
            object[] results = this.Invoke("GetClassStr", new object[] {
                        fileName,
                        mtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClassStrAsync(string fileName, mType mtype) {
            this.GetClassStrAsync(fileName, mtype, null);
        }
        
        /// <remarks/>
        public void GetClassStrAsync(string fileName, mType mtype, object userState) {
            if ((this.GetClassStrOperationCompleted == null)) {
                this.GetClassStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClassStrOperationCompleted);
            }
            this.InvokeAsync("GetClassStr", new object[] {
                        fileName,
                        mtype}, this.GetClassStrOperationCompleted, userState);
        }
        
        private void OnGetClassStrOperationCompleted(object arg) {
            if ((this.GetClassStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClassStrCompleted(this, new GetClassStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://serv.renzhe.org/Delete", RequestNamespace="http://serv.renzhe.org/", ResponseNamespace="http://serv.renzhe.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete(string classMemberObj, string fileName, mType mtype) {
            object[] results = this.Invoke("Delete", new object[] {
                        classMemberObj,
                        fileName,
                        mtype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string classMemberObj, string fileName, mType mtype) {
            this.DeleteAsync(classMemberObj, fileName, mtype, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string classMemberObj, string fileName, mType mtype, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        classMemberObj,
                        fileName,
                        mtype}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://serv.renzhe.org/ReName", RequestNamespace="http://serv.renzhe.org/", ResponseNamespace="http://serv.renzhe.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReName(string classMemberObj, string fileName, string fileNewName, mType mtype) {
            object[] results = this.Invoke("ReName", new object[] {
                        classMemberObj,
                        fileName,
                        fileNewName,
                        mtype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReNameAsync(string classMemberObj, string fileName, string fileNewName, mType mtype) {
            this.ReNameAsync(classMemberObj, fileName, fileNewName, mtype, null);
        }
        
        /// <remarks/>
        public void ReNameAsync(string classMemberObj, string fileName, string fileNewName, mType mtype, object userState) {
            if ((this.ReNameOperationCompleted == null)) {
                this.ReNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReNameOperationCompleted);
            }
            this.InvokeAsync("ReName", new object[] {
                        classMemberObj,
                        fileName,
                        fileNewName,
                        mtype}, this.ReNameOperationCompleted, userState);
        }
        
        private void OnReNameOperationCompleted(object arg) {
            if ((this.ReNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReNameCompleted(this, new ReNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://serv.renzhe.org/doit", RequestNamespace="http://serv.renzhe.org/", ResponseNamespace="http://serv.renzhe.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void doit() {
            this.Invoke("doit", new object[0]);
        }
        
        /// <remarks/>
        public void doitAsync() {
            this.doitAsync(null);
        }
        
        /// <remarks/>
        public void doitAsync(object userState) {
            if ((this.doitOperationCompleted == null)) {
                this.doitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoitOperationCompleted);
            }
            this.InvokeAsync("doit", new object[0], this.doitOperationCompleted, userState);
        }
        
        private void OndoitOperationCompleted(object arg) {
            if ((this.doitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://serv.renzhe.org/")]
    public partial class ModelShopOne {
        
        private string modelNameField;
        
        private string modelAuthorField;
        
        private string modelEmailField;
        
        private string modelQQField;
        
        private string modelPassWordField;
        
        private string modelUrlField;
        
        private string siteModelDescriptionField;
        
        private string filePathField;
        
        private bool isPubField;
        
        private System.DateTime lastUpDateField;
        
        private long fileSizeField;
        
        private bool isCoreSocketField;
        
        private bool isCoreWebField;
        
        private bool isFanZhuaQuField;
        
        /// <remarks/>
        public string ModelName {
            get {
                return this.modelNameField;
            }
            set {
                this.modelNameField = value;
            }
        }
        
        /// <remarks/>
        public string ModelAuthor {
            get {
                return this.modelAuthorField;
            }
            set {
                this.modelAuthorField = value;
            }
        }
        
        /// <remarks/>
        public string ModelEmail {
            get {
                return this.modelEmailField;
            }
            set {
                this.modelEmailField = value;
            }
        }
        
        /// <remarks/>
        public string ModelQQ {
            get {
                return this.modelQQField;
            }
            set {
                this.modelQQField = value;
            }
        }
        
        /// <remarks/>
        public string ModelPassWord {
            get {
                return this.modelPassWordField;
            }
            set {
                this.modelPassWordField = value;
            }
        }
        
        /// <remarks/>
        public string ModelUrl {
            get {
                return this.modelUrlField;
            }
            set {
                this.modelUrlField = value;
            }
        }
        
        /// <remarks/>
        public string SiteModelDescription {
            get {
                return this.siteModelDescriptionField;
            }
            set {
                this.siteModelDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string FilePath {
            get {
                return this.filePathField;
            }
            set {
                this.filePathField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPub {
            get {
                return this.isPubField;
            }
            set {
                this.isPubField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpDate {
            get {
                return this.lastUpDateField;
            }
            set {
                this.lastUpDateField = value;
            }
        }
        
        /// <remarks/>
        public long FileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCoreSocket {
            get {
                return this.isCoreSocketField;
            }
            set {
                this.isCoreSocketField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCoreWeb {
            get {
                return this.isCoreWebField;
            }
            set {
                this.isCoreWebField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFanZhuaQu {
            get {
                return this.isFanZhuaQuField;
            }
            set {
                this.isFanZhuaQuField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://serv.renzhe.org/")]
    public enum mType {
        
        /// <remarks/>
        发布模块,
        
        /// <remarks/>
        抓取模块,
        
        /// <remarks/>
        个人数据,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllPutModulesCompletedEventHandler(object sender, GetAllPutModulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPutModulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPutModulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ModelShopOne[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ModelShopOne[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllPickModulesCompletedEventHandler(object sender, GetAllPickModulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPickModulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPickModulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ModelShopOne[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ModelShopOne[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UploadClassStrCompletedEventHandler(object sender, UploadClassStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadClassStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadClassStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetClassStrCompletedEventHandler(object sender, GetClassStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClassStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClassStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReNameCompletedEventHandler(object sender, ReNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void doitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591